<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AI Code Terminal: The AI-Native Shell</title><link>https://act.drmhse.com/</link><description>Recent content on AI Code Terminal: The AI-Native Shell</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://act.drmhse.com/index.xml" rel="self" type="application/rss+xml"/><item><title>API Endpoints</title><link>https://act.drmhse.com/docs/api/endpoints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/api/endpoints/</guid><description>&lt;h1 id="api-endpoints">API Endpoints&lt;/h1>
&lt;p>AI Code Terminal provides a comprehensive REST API for authentication, workspace management, system monitoring, and theme configuration.&lt;/p>
&lt;h2 id="base-url-and-versioning">Base URL and Versioning&lt;/h2>
&lt;p>&lt;strong>Base URL:&lt;/strong> &lt;code>http://localhost:3014/api&lt;/code>&lt;br>
&lt;strong>API Version:&lt;/strong> v1 (implicit)&lt;br>
&lt;strong>Content-Type:&lt;/strong> &lt;code>application/json&lt;/code>&lt;/p>
&lt;h2 id="authentication">Authentication&lt;/h2>
&lt;p>All API endpoints (except health checks) require authentication via JWT Bearer token:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="authentication-endpoints">Authentication Endpoints&lt;/h2>
&lt;h3 id="start-github-oauth-flow">Start GitHub OAuth Flow&lt;/h3>
&lt;p>&lt;strong>&lt;code>GET /api/github/auth&lt;/code>&lt;/strong>&lt;/p>
&lt;p>Initiates GitHub OAuth authentication flow.&lt;/p>
&lt;p>&lt;strong>Response:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://github.com/login/oauth/authorize?client_id=...&amp;amp;redirect_uri=...&amp;amp;scope=read:user+user:email+repo&amp;amp;state=...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -X GET http://localhost:3014/api/github/auth
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="oauth-callback-handler">OAuth Callback Handler&lt;/h3>
&lt;p>&lt;strong>&lt;code>GET /auth/github/callback&lt;/code>&lt;/strong>&lt;/p></description></item><item><title>Authentication Flow</title><link>https://act.drmhse.com/docs/authentication/auth-flow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/authentication/auth-flow/</guid><description>&lt;h1 id="authentication-flow">Authentication Flow&lt;/h1>
&lt;p>AI Code Terminal implements a secure GitHub OAuth 2.0 authentication flow with single-tenant validation and JWT-based session management.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The authentication system provides:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>GitHub OAuth 2.0&lt;/strong> - Standard OAuth flow with GitHub&lt;/li>
&lt;li>&lt;strong>Single-Tenant Validation&lt;/strong> - Only authorized user can access&lt;/li>
&lt;li>&lt;strong>JWT Sessions&lt;/strong> - Stateless session management&lt;/li>
&lt;li>&lt;strong>Token Refresh&lt;/strong> - Automatic token renewal&lt;/li>
&lt;li>&lt;strong>Secure Storage&lt;/strong> - Encrypted token storage&lt;/li>
&lt;/ul>
&lt;h2 id="complete-authentication-flow">Complete Authentication Flow&lt;/h2>
&lt;h3 id="step-1-initial-access">Step 1: Initial Access&lt;/h3>
&lt;p>When a user visits the application:&lt;/p></description></item><item><title>Database Schema</title><link>https://act.drmhse.com/docs/database/schema/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/database/schema/</guid><description>&lt;h1 id="database-schema">Database Schema&lt;/h1>
&lt;p>AI Code Terminal uses SQLite with Prisma ORM for lightweight, efficient data storage. The schema is designed for single-tenant operation with minimal data requirements while maintaining security and performance.&lt;/p>
&lt;h2 id="database-technology-stack">Database Technology Stack&lt;/h2>
&lt;h3 id="core-components">Core Components&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Database Engine:&lt;/strong> SQLite 3.x&lt;/li>
&lt;li>&lt;strong>ORM:&lt;/strong> Prisma 5.x&lt;/li>
&lt;li>&lt;strong>Query Builder:&lt;/strong> Prisma Client&lt;/li>
&lt;li>&lt;strong>Migrations:&lt;/strong> Prisma Migrate&lt;/li>
&lt;li>&lt;strong>Schema Definition:&lt;/strong> Prisma Schema Language&lt;/li>
&lt;/ul>
&lt;h3 id="advantages-of-sqlite--prisma">Advantages of SQLite + Prisma&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Zero Configuration:&lt;/strong> No database server setup required&lt;/li>
&lt;li>&lt;strong>ACID Compliance:&lt;/strong> Full transaction support&lt;/li>
&lt;li>&lt;strong>Cross-platform:&lt;/strong> Works on all operating systems&lt;/li>
&lt;li>&lt;strong>Embedded:&lt;/strong> No network overhead&lt;/li>
&lt;li>&lt;strong>Type Safety:&lt;/strong> Prisma generates TypeScript types&lt;/li>
&lt;li>&lt;strong>Migration System:&lt;/strong> Version-controlled schema changes&lt;/li>
&lt;/ul>
&lt;h2 id="complete-schema-definition">Complete Schema Definition&lt;/h2>
&lt;h3 id="prisma-schema-file">Prisma Schema File&lt;/h3>
&lt;p>&lt;strong>Location:&lt;/strong> &lt;code>/prisma/schema.prisma&lt;/code>&lt;/p></description></item><item><title>Development Setup</title><link>https://act.drmhse.com/docs/development/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/development/setup/</guid><description>&lt;h1 id="development-setup">Development Setup&lt;/h1>
&lt;p>This guide covers setting up a complete development environment for AI Code Terminal, including all dependencies, tools, and configurations needed for local development.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;h3 id="system-requirements">System Requirements&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Node.js:&lt;/strong> 18.x or higher (LTS recommended)&lt;/li>
&lt;li>&lt;strong>npm:&lt;/strong> 9.x or higher (comes with Node.js)&lt;/li>
&lt;li>&lt;strong>Git:&lt;/strong> Latest stable version&lt;/li>
&lt;li>&lt;strong>Docker:&lt;/strong> Latest stable version (optional, for containerized testing)&lt;/li>
&lt;li>&lt;strong>GitHub Account:&lt;/strong> For OAuth testing&lt;/li>
&lt;/ul>
&lt;h3 id="recommended-tools">Recommended Tools&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>VS Code:&lt;/strong> With recommended extensions&lt;/li>
&lt;li>&lt;strong>GitHub CLI:&lt;/strong> For repository management&lt;/li>
&lt;li>&lt;strong>Postman:&lt;/strong> For API testing&lt;/li>
&lt;li>&lt;strong>Docker Desktop:&lt;/strong> For container development&lt;/li>
&lt;/ul>
&lt;h2 id="repository-setup">Repository Setup&lt;/h2>
&lt;h3 id="clone-repository">Clone Repository&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Clone the main repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/your-username/ai-coding-terminal.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ai-coding-terminal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Install dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="environment-configuration">Environment Configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Copy example environment file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp env.example .env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Edit the environment file with your settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nano .env &lt;span style="color:#75715e"># or your preferred editor&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="required-environment-variables">Required Environment Variables&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Development Environment Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NODE_ENV&lt;span style="color:#f92672">=&lt;/span>development
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3014&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HOST&lt;span style="color:#f92672">=&lt;/span>localhost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># JWT Configuration (generate a secure secret)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JWT_SECRET&lt;span style="color:#f92672">=&lt;/span>your-development-jwt-secret-at-least-32-characters-long
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># GitHub OAuth (create a GitHub OAuth app)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITHUB_CLIENT_ID&lt;span style="color:#f92672">=&lt;/span>your_github_client_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITHUB_CLIENT_SECRET&lt;span style="color:#f92672">=&lt;/span>your_github_client_secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITHUB_CALLBACK_URL&lt;span style="color:#f92672">=&lt;/span>http://localhost:3014/auth/github/callback
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Single-tenant user (your GitHub username)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TENANT_GITHUB_USERNAME&lt;span style="color:#f92672">=&lt;/span>your-github-username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DATABASE_URL&lt;span style="color:#f92672">=&lt;/span>file:./data/database.db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Optional Development Settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG&lt;span style="color:#f92672">=&lt;/span>ai-code-terminal:*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOG_LEVEL&lt;span style="color:#f92672">=&lt;/span>debug
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WORKSPACE_ROOT&lt;span style="color:#f92672">=&lt;/span>./workspaces
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MAX_WORKSPACES_PER_USER&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="github-oauth-app-setup">GitHub OAuth App Setup&lt;/h3>
&lt;ol>
&lt;li>Go to &lt;a href="https://github.com/settings/applications/new">GitHub Settings → Developer settings → OAuth Apps&lt;/a>&lt;/li>
&lt;li>Create a new OAuth App with these settings:
&lt;ul>
&lt;li>&lt;strong>Application name:&lt;/strong> AI Code Terminal (Development)&lt;/li>
&lt;li>&lt;strong>Homepage URL:&lt;/strong> http://localhost:3014&lt;/li>
&lt;li>&lt;strong>Authorization callback URL:&lt;/strong> http://localhost:3014/auth/github/callback&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Copy the Client ID and Client Secret to your &lt;code>.env&lt;/code> file&lt;/li>
&lt;/ol>
&lt;h2 id="database-setup">Database Setup&lt;/h2>
&lt;h3 id="initialize-database">Initialize Database&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Generate Prisma client&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npx prisma generate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Push schema to database (creates tables)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npx prisma db push
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Optional: Seed with test data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run seed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="database-management">Database Management&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># View database in Prisma Studio&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npx prisma studio
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Reset database (development only)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npx prisma migrate reset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create new migration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npx prisma migrate dev --name add_new_field
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="development-scripts">Development Scripts&lt;/h2>
&lt;h3 id="available-scripts">Available Scripts&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Start development server with auto-restart&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Start production server&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Build for production&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Run tests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Run tests with coverage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run test:coverage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Run tests in watch mode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run test:watch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Lint code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run lint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Format code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run format
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Type check&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run type-check
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="development-server">Development Server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Start with default settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Start with debug logging&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG&lt;span style="color:#f92672">=&lt;/span>* npm run dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Start on different port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3015&lt;/span> npm run dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The development server includes:&lt;/p></description></item><item><title>Docker Deployment</title><link>https://act.drmhse.com/docs/deployment/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/deployment/docker/</guid><description>&lt;h1 id="docker-deployment">Docker Deployment&lt;/h1>
&lt;p>AI Code Terminal is designed for containerized deployment with Docker. This guide covers production Docker deployment with security hardening, volume management, and orchestration.&lt;/p>
&lt;h2 id="docker-architecture">Docker Architecture&lt;/h2>
&lt;h3 id="container-design">Container Design&lt;/h3>
&lt;p>The application uses a security-hardened Docker container with:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Base Image:&lt;/strong> Node.js 20 Alpine Linux&lt;/li>
&lt;li>&lt;strong>Non-root User:&lt;/strong> Runs as &lt;code>claude&lt;/code> user (UID 1001)&lt;/li>
&lt;li>&lt;strong>Read-only Root Filesystem:&lt;/strong> Enhanced security&lt;/li>
&lt;li>&lt;strong>Resource Limits:&lt;/strong> Memory and CPU constraints&lt;/li>
&lt;li>&lt;strong>Health Checks:&lt;/strong> Built-in health monitoring&lt;/li>
&lt;/ul>
&lt;h3 id="security-features">Security Features&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Minimal Attack Surface:&lt;/strong> Alpine Linux base&lt;/li>
&lt;li>&lt;strong>No New Privileges:&lt;/strong> Prevents privilege escalation&lt;/li>
&lt;li>&lt;strong>Dropped Capabilities:&lt;/strong> Minimal required capabilities&lt;/li>
&lt;li>&lt;strong>Non-root Execution:&lt;/strong> All processes run as non-root user&lt;/li>
&lt;li>&lt;strong>Temporary File Systems:&lt;/strong> Writable areas in tmpfs&lt;/li>
&lt;/ul>
&lt;h2 id="dockerfile-overview">Dockerfile Overview&lt;/h2>
&lt;h3 id="multi-stage-build">Multi-stage Build&lt;/h3>
&lt;p>&lt;strong>&lt;code>Dockerfile&lt;/code>:&lt;/strong>&lt;/p></description></item><item><title>Introduction</title><link>https://act.drmhse.com/docs/getting-started/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/getting-started/introduction/</guid><description>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>AI Code Terminal is a production-ready, single-tenant development environment that provides god-mode shell access through your browser. Built with security and simplicity in mind, it offers a complete terminal interface for a single authorized GitHub user to work directly in their repositories with integrated Claude Code support.&lt;/p>
&lt;h2 id="what-makes-ai-code-terminal-special">What Makes AI Code Terminal Special&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Browser-based terminal:&lt;/strong> Full shell access without installing anything locally&lt;/li>
&lt;li>&lt;strong>Single-tenant security:&lt;/strong> Designed for one user with enterprise-grade security&lt;/li>
&lt;li>&lt;strong>Claude Code integration:&lt;/strong> Built-in support for AI-assisted coding&lt;/li>
&lt;li>&lt;strong>GitHub-first workflow:&lt;/strong> Direct repository cloning and management&lt;/li>
&lt;li>&lt;strong>Real-time collaboration:&lt;/strong> WebSocket-powered terminal sessions&lt;/li>
&lt;li>&lt;strong>Container isolation:&lt;/strong> Secure, resource-limited execution environment&lt;/li>
&lt;li>&lt;strong>Persistent workspaces:&lt;/strong> Your work is automatically saved and restored&lt;/li>
&lt;/ul>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;h3 id="remote-development">Remote Development&lt;/h3>
&lt;p>Code from anywhere with just a browser. Perfect for developers who need access to their development environment from multiple devices or locations.&lt;/p></description></item><item><title>Terminal Access</title><link>https://act.drmhse.com/docs/core-features/terminal-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/core-features/terminal-access/</guid><description>&lt;h1 id="terminal-access">Terminal Access&lt;/h1>
&lt;p>AI Code Terminal provides full shell access through your browser with real-time I/O powered by xterm.js and node-pty.&lt;/p>
&lt;h2 id="core-capabilities">Core Capabilities&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Full shell access:&lt;/strong> Login shells (bash, zsh, fish) with complete environment setup&lt;/li>
&lt;li>&lt;strong>Real-time I/O:&lt;/strong> Instant bidirectional communication via WebSockets&lt;/li>
&lt;li>&lt;strong>256-color support:&lt;/strong> Full color terminal with xterm-256color&lt;/li>
&lt;li>&lt;strong>Terminal resizing:&lt;/strong> Dynamic resize handling that adapts to window changes&lt;/li>
&lt;li>&lt;strong>Session persistence:&lt;/strong> Terminal sessions survive browser refreshes&lt;/li>
&lt;li>&lt;strong>Process isolation:&lt;/strong> Each workspace gets isolated shell processes&lt;/li>
&lt;li>&lt;strong>History management:&lt;/strong> Command history preserved across sessions&lt;/li>
&lt;/ul>
&lt;h2 id="terminal-technology-stack">Terminal Technology Stack&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Frontend:&lt;/strong> xterm.js for terminal emulation&lt;/li>
&lt;li>&lt;strong>Backend:&lt;/strong> node-pty for PTY process management&lt;/li>
&lt;li>&lt;strong>Communication:&lt;/strong> Socket.IO for real-time WebSocket communication&lt;/li>
&lt;li>&lt;strong>Process Management:&lt;/strong> Isolated shell processes per workspace&lt;/li>
&lt;/ul>
&lt;h2 id="supported-operations">Supported Operations&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Development Tools&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> npm run dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/user/repo.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker build -t myapp .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python -m venv venv &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> source venv/bin/activate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># System Commands&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls -la --color&lt;span style="color:#f92672">=&lt;/span>auto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>htop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps aux | grep node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tail -f /var/log/app.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># File Operations &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim config.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nano README.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>find . -name &lt;span style="color:#e6db74">&amp;#34;*.js&amp;#34;&lt;/span> -type f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Claude Integration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>claude login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>claude chat &lt;span style="color:#e6db74">&amp;#34;Help me debug this function&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>claude apply changes.patch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Git Operations (with OAuth integration)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#e6db74">&amp;#34;Update feature&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="terminal-controls">Terminal Controls&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Shortcut&lt;/th>
 &lt;th>Action&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>Ctrl+C&lt;/code>&lt;/td>
 &lt;td>Interrupt&lt;/td>
 &lt;td>Send SIGINT to current process&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Ctrl+D&lt;/code>&lt;/td>
 &lt;td>EOF&lt;/td>
 &lt;td>Send EOF signal&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Ctrl+L&lt;/code>&lt;/td>
 &lt;td>Clear&lt;/td>
 &lt;td>Clear terminal screen&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>↑/↓&lt;/code>&lt;/td>
 &lt;td>History&lt;/td>
 &lt;td>Navigate command history&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Tab&lt;/code>&lt;/td>
 &lt;td>Complete&lt;/td>
 &lt;td>Auto-complete commands and paths&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="session-management">Session Management&lt;/h2>
&lt;p>Terminal sessions are automatically managed:&lt;/p></description></item><item><title>Data Models</title><link>https://act.drmhse.com/docs/database/models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/database/models/</guid><description>&lt;h1 id="data-models">Data Models&lt;/h1>
&lt;p>AI Code Terminal uses a carefully designed data model that supports single-tenant operation, workspace isolation, and real-time session management. This guide covers the business logic, relationships, and usage patterns for each model.&lt;/p>
&lt;h2 id="model-relationships-overview">Model Relationships Overview&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">erDiagram
 Settings ||--|| User : &amp;#34;single-tenant&amp;#34;
 Workspace ||--o{ Session : &amp;#34;has-many&amp;#34;
 Workspace ||--o{ AuthLog : &amp;#34;references&amp;#34;
 Session ||--o{ SystemMetric : &amp;#34;monitors&amp;#34;
 
 Settings {
 string id PK &amp;#34;singleton&amp;#34;
 string githubToken &amp;#34;encrypted&amp;#34;
 string githubRefreshToken &amp;#34;encrypted&amp;#34;
 datetime githubTokenExpiresAt
 string theme
 string preferences &amp;#34;JSON&amp;#34;
 }
 
 Workspace {
 string id PK &amp;#34;cuid&amp;#34;
 string name UK &amp;#34;unique&amp;#34;
 string githubRepo UK &amp;#34;owner/repo&amp;#34;
 string githubUrl
 int githubId
 string localPath
 string branch
 boolean isActive
 datetime lastSyncAt
 }
 
 Session {
 string id PK &amp;#34;cuid&amp;#34;
 string workspaceId FK
 int shellPid
 string socketId
 string shell
 string status
 string workingDirectory
 datetime lastActivityAt
 }
&lt;/code>&lt;/pre>&lt;h2 id="settings-model-business-logic">Settings Model Business Logic&lt;/h2>
&lt;h3 id="single-tenant-configuration">Single-Tenant Configuration&lt;/h3>
&lt;p>The Settings model implements the singleton pattern for single-tenant configuration:&lt;/p></description></item><item><title>Quick Start</title><link>https://act.drmhse.com/docs/getting-started/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/getting-started/quick-start/</guid><description>&lt;h1 id="quick-start">Quick Start&lt;/h1>
&lt;p>Get AI Code Terminal up and running in just a few minutes with Docker.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Before starting, ensure you have:&lt;/p>
&lt;ul>
&lt;li>Docker and Docker Compose installed&lt;/li>
&lt;li>A GitHub account&lt;/li>
&lt;li>GitHub OAuth application credentials&lt;/li>
&lt;/ul>
&lt;h2 id="step-1-clone-and-setup">Step 1: Clone and Setup&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Clone the repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/your-username/ai-coding-terminal.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ai-coding-terminal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Copy environment template&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp env.example .env
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-2-configure-environment">Step 2: Configure Environment&lt;/h2>
&lt;p>Edit your &lt;code>.env&lt;/code> file with the required values:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Required - GitHub OAuth&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITHUB_CLIENT_ID&lt;span style="color:#f92672">=&lt;/span>your_github_client_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITHUB_CLIENT_SECRET&lt;span style="color:#f92672">=&lt;/span>your_github_client_secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TENANT_GITHUB_USERNAME&lt;span style="color:#f92672">=&lt;/span>your-github-username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Required - Security&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JWT_SECRET&lt;span style="color:#f92672">=&lt;/span>your-super-secure-jwt-secret-at-least-32-characters
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-3-start-the-application">Step 3: Start the Application&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Build and run with Docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run docker:build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run docker:run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or using Docker Compose:&lt;/p></description></item><item><title>Security Features</title><link>https://act.drmhse.com/docs/authentication/security-features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/authentication/security-features/</guid><description>&lt;h1 id="security-features">Security Features&lt;/h1>
&lt;p>AI Code Terminal implements multiple layers of security to protect user data, prevent unauthorized access, and ensure safe operation in both development and production environments.&lt;/p>
&lt;h2 id="multi-layer-security-architecture">Multi-Layer Security Architecture&lt;/h2>
&lt;h3 id="defense-in-depth">Defense in Depth&lt;/h3>
&lt;p>The security model implements multiple overlapping layers:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Network Security&lt;/strong> - HTTPS, secure headers, CORS&lt;/li>
&lt;li>&lt;strong>Authentication Security&lt;/strong> - OAuth 2.0, JWT, single-tenant validation&lt;/li>
&lt;li>&lt;strong>Authorization Security&lt;/strong> - Role-based access, resource permissions&lt;/li>
&lt;li>&lt;strong>Data Security&lt;/strong> - Encryption at rest, secure transmission&lt;/li>
&lt;li>&lt;strong>Application Security&lt;/strong> - Input validation, output sanitization&lt;/li>
&lt;li>&lt;strong>Infrastructure Security&lt;/strong> - Container isolation, resource limits&lt;/li>
&lt;/ol>
&lt;h2 id="encryption-and-data-protection">Encryption and Data Protection&lt;/h2>
&lt;h3 id="data-encryption-at-rest">Data Encryption at Rest&lt;/h3>
&lt;p>Sensitive data is encrypted using industry-standard algorithms:&lt;/p></description></item><item><title>Testing</title><link>https://act.drmhse.com/docs/development/testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/development/testing/</guid><description>&lt;h1 id="testing">Testing&lt;/h1>
&lt;p>AI Code Terminal uses a comprehensive testing strategy with Jest as the primary testing framework. This guide covers unit tests, integration tests, and end-to-end testing approaches.&lt;/p>
&lt;h2 id="testing-framework-overview">Testing Framework Overview&lt;/h2>
&lt;h3 id="technology-stack">Technology Stack&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Test Runner:&lt;/strong> Jest 30.x&lt;/li>
&lt;li>&lt;strong>Assertion Library:&lt;/strong> Jest built-in matchers&lt;/li>
&lt;li>&lt;strong>Mocking:&lt;/strong> Jest mocks and manual mocks&lt;/li>
&lt;li>&lt;strong>Coverage:&lt;/strong> Jest coverage with c8&lt;/li>
&lt;li>&lt;strong>Database Testing:&lt;/strong> In-memory SQLite with Prisma&lt;/li>
&lt;li>&lt;strong>HTTP Testing:&lt;/strong> Supertest&lt;/li>
&lt;li>&lt;strong>WebSocket Testing:&lt;/strong> Socket.IO client testing utilities&lt;/li>
&lt;/ul>
&lt;h3 id="test-configuration">Test Configuration&lt;/h3>
&lt;p>&lt;strong>&lt;code>jest.config.js&lt;/code>:&lt;/strong>&lt;/p></description></item><item><title>WebSocket Events</title><link>https://act.drmhse.com/docs/api/websocket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/api/websocket/</guid><description>&lt;h1 id="websocket-events">WebSocket Events&lt;/h1>
&lt;p>AI Code Terminal uses Socket.IO for real-time bidirectional communication between the client and server, enabling instant terminal I/O, workspace updates, and system notifications.&lt;/p>
&lt;h2 id="connection-setup">Connection Setup&lt;/h2>
&lt;h3 id="client-connection">Client Connection&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Connect with JWT authentication
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">io&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">auth&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">token&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">localStorage&lt;/span>.&lt;span style="color:#a6e22e">getItem&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;jwt_token&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">transports&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;websocket&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;polling&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Connection event handlers
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;connect&amp;#39;&lt;/span>, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Connected to server&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;disconnect&amp;#39;&lt;/span>, (&lt;span style="color:#a6e22e">reason&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Disconnected:&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">reason&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;connect_error&amp;#39;&lt;/span>, (&lt;span style="color:#a6e22e">error&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">error&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Connection failed:&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">error&lt;/span>.&lt;span style="color:#a6e22e">message&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="server-authentication">Server Authentication&lt;/h3>
&lt;p>The server validates JWT tokens for all WebSocket connections:&lt;/p></description></item><item><title>Workspace Management</title><link>https://act.drmhse.com/docs/core-features/workspace-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/core-features/workspace-management/</guid><description>&lt;h1 id="workspace-management">Workspace Management&lt;/h1>
&lt;p>Workspaces provide isolated environments for each GitHub repository, complete with automatic cloning, Git integration, and persistent terminal sessions.&lt;/p>
&lt;h2 id="workspace-lifecycle">Workspace Lifecycle&lt;/h2>
&lt;h3 id="1-repository-selection">1. Repository Selection&lt;/h3>
&lt;p>Browse and select repositories from your GitHub account:&lt;/p>
&lt;ul>
&lt;li>Click &lt;strong>&amp;ldquo;Browse Repositories&amp;rdquo;&lt;/strong> in the sidebar&lt;/li>
&lt;li>View all accessible repositories (public and private)&lt;/li>
&lt;li>Search and filter repositories&lt;/li>
&lt;li>Select repository to clone&lt;/li>
&lt;/ul>
&lt;h3 id="2-automatic-cloning">2. Automatic Cloning&lt;/h3>
&lt;p>Repository is automatically cloned with OAuth authentication:&lt;/p>
&lt;ul>
&lt;li>HTTPS clone with OAuth credential helper&lt;/li>
&lt;li>Automatic Git configuration setup&lt;/li>
&lt;li>SSH key support for advanced users&lt;/li>
&lt;li>Workspace directory creation&lt;/li>
&lt;/ul>
&lt;h3 id="3-environment-setup">3. Environment Setup&lt;/h3>
&lt;p>Each workspace gets:&lt;/p></description></item><item><title>GitHub Integration</title><link>https://act.drmhse.com/docs/core-features/github-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/core-features/github-integration/</guid><description>&lt;h1 id="github-integration">GitHub Integration&lt;/h1>
&lt;p>AI Code Terminal provides seamless integration with GitHub for authentication, repository browsing, and automated Git operations with OAuth credential management.&lt;/p>
&lt;h2 id="authentication-integration">Authentication Integration&lt;/h2>
&lt;h3 id="oauth-flow">OAuth Flow&lt;/h3>
&lt;p>The GitHub integration handles the complete OAuth 2.0 flow:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Authorization Request&lt;/strong> - User clicks &amp;ldquo;Login with GitHub&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>GitHub Authorization&lt;/strong> - User authorizes the application&lt;/li>
&lt;li>&lt;strong>Token Exchange&lt;/strong> - Application receives access token&lt;/li>
&lt;li>&lt;strong>User Validation&lt;/strong> - Validates against &lt;code>TENANT_GITHUB_USERNAME&lt;/code>&lt;/li>
&lt;li>&lt;strong>Session Creation&lt;/strong> - Creates authenticated session with JWT&lt;/li>
&lt;/ol>
&lt;h3 id="single-tenant-security">Single-Tenant Security&lt;/h3>
&lt;p>The application enforces single-tenant access:&lt;/p></description></item><item><title>Installation</title><link>https://act.drmhse.com/docs/getting-started/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/getting-started/installation/</guid><description>&lt;h1 id="installation">Installation&lt;/h1>
&lt;p>Multiple installation methods are available depending on your needs and environment.&lt;/p>
&lt;h2 id="system-requirements">System Requirements&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Node.js:&lt;/strong> Version 18.x or higher&lt;/li>
&lt;li>&lt;strong>Docker:&lt;/strong> Latest stable version&lt;/li>
&lt;li>&lt;strong>Docker Compose:&lt;/strong> v2.0 or higher&lt;/li>
&lt;li>&lt;strong>Git:&lt;/strong> For repository management&lt;/li>
&lt;li>&lt;strong>GitHub Account:&lt;/strong> For OAuth authentication&lt;/li>
&lt;/ul>
&lt;h2 id="installation-methods">Installation Methods&lt;/h2>
&lt;h3 id="method-1-docker-recommended">Method 1: Docker (Recommended)&lt;/h3>
&lt;p>The easiest way to get started:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Clone the repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/your-username/ai-coding-terminal.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ai-coding-terminal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Copy environment file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp env.example .env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Build and run with Docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run docker:build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run docker:run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="method-2-local-development">Method 2: Local Development&lt;/h3>
&lt;p>For development or local testing:&lt;/p></description></item><item><title>Token Management</title><link>https://act.drmhse.com/docs/authentication/token-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/authentication/token-management/</guid><description>&lt;h1 id="token-management">Token Management&lt;/h1>
&lt;p>AI Code Terminal implements comprehensive token management for both JWT session tokens and GitHub OAuth tokens, ensuring secure authentication and seamless user experience.&lt;/p>
&lt;h2 id="token-types-overview">Token Types Overview&lt;/h2>
&lt;h3 id="jwt-session-tokens">JWT Session Tokens&lt;/h3>
&lt;p>&lt;strong>Purpose:&lt;/strong> Client-side session management&lt;br>
&lt;strong>Lifetime:&lt;/strong> 7 days (configurable)&lt;br>
&lt;strong>Storage:&lt;/strong> Client localStorage + optional HttpOnly cookies&lt;br>
&lt;strong>Scope:&lt;/strong> Application authentication and authorization&lt;/p>
&lt;h3 id="github-oauth-access-tokens">GitHub OAuth Access Tokens&lt;/h3>
&lt;p>&lt;strong>Purpose:&lt;/strong> GitHub API access&lt;br>
&lt;strong>Lifetime:&lt;/strong> 8 hours (GitHub default)&lt;br>
&lt;strong>Storage:&lt;/strong> Encrypted in server database&lt;br>
&lt;strong>Scope:&lt;/strong> GitHub repository and user data access&lt;/p></description></item><item><title>Claude Integration</title><link>https://act.drmhse.com/docs/core-features/claude-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/core-features/claude-integration/</guid><description>&lt;h1 id="claude-integration">Claude Integration&lt;/h1>
&lt;p>AI Code Terminal includes built-in support for Claude Code, providing AI-assisted development directly in your terminal environment.&lt;/p>
&lt;h2 id="claude-code-installation">Claude Code Installation&lt;/h2>
&lt;h3 id="automatic-installation">Automatic Installation&lt;/h3>
&lt;p>Claude Code is automatically installed in the Docker container:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Pre-installed in Docker image&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> npm install -g @anthropic/claude-code&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="manual-installation">Manual Installation&lt;/h3>
&lt;p>For local development setups:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Install Claude Code globally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install -g @anthropic/claude-code
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Verify installation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>claude --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="getting-started-with-claude-code">Getting Started with Claude Code&lt;/h2>
&lt;h3 id="initial-setup">Initial Setup&lt;/h3>
&lt;p>After accessing your terminal, set up Claude Code:&lt;/p></description></item><item><title>GitHub OAuth Setup</title><link>https://act.drmhse.com/docs/getting-started/github-oauth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/getting-started/github-oauth/</guid><description>&lt;h1 id="github-oauth-setup">GitHub OAuth Setup&lt;/h1>
&lt;p>Before using AI Code Terminal, you must create a GitHub OAuth application to enable authentication. This guide walks you through the complete setup process.&lt;/p>
&lt;h2 id="create-oauth-application">Create OAuth Application&lt;/h2>
&lt;h3 id="step-1-navigate-to-github-settings">Step 1: Navigate to GitHub Settings&lt;/h3>
&lt;ol>
&lt;li>Go to &lt;a href="https://github.com">GitHub.com&lt;/a>&lt;/li>
&lt;li>Click your profile picture → &lt;strong>Settings&lt;/strong>&lt;/li>
&lt;li>Scroll down to &lt;strong>Developer settings&lt;/strong>&lt;/li>
&lt;li>Click &lt;strong>OAuth Apps&lt;/strong>&lt;/li>
&lt;li>Click &lt;strong>New OAuth App&lt;/strong>&lt;/li>
&lt;/ol>
&lt;h3 id="step-2-configure-application-settings">Step 2: Configure Application Settings&lt;/h3>
&lt;p>Fill in the application form with these values:&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Field&lt;/th>
 &lt;th>Value&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Application name&lt;/strong>&lt;/td>
 &lt;td>&lt;code>AI Code Terminal&lt;/code>&lt;/td>
 &lt;td>Display name for your application&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Homepage URL&lt;/strong>&lt;/td>
 &lt;td>&lt;code>http://localhost:3014&lt;/code>&lt;/td>
 &lt;td>Your application&amp;rsquo;s main URL&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Application description&lt;/strong>&lt;/td>
 &lt;td>&lt;code>Browser-based terminal for development&lt;/code>&lt;/td>
 &lt;td>Optional description&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Authorization callback URL&lt;/strong>&lt;/td>
 &lt;td>&lt;code>http://localhost:3014/auth/github/callback&lt;/code>&lt;/td>
 &lt;td>OAuth redirect endpoint&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="step-3-generate-client-secret">Step 3: Generate Client Secret&lt;/h3>
&lt;p>After creating the app:&lt;/p></description></item><item><title>Configuration</title><link>https://act.drmhse.com/docs/getting-started/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/getting-started/configuration/</guid><description>&lt;h1 id="configuration">Configuration&lt;/h1>
&lt;p>Configure your AI Code Terminal instance using environment variables. This guide covers all available configuration options and best practices.&lt;/p>
&lt;h2 id="environment-file-setup">Environment File Setup&lt;/h2>
&lt;p>Copy the example environment file and customize it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cp env.example .env
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="required-environment-variables">Required Environment Variables&lt;/h2>
&lt;p>These variables must be configured before the application will start:&lt;/p>
&lt;h3 id="github-oauth-configuration">GitHub OAuth Configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># GitHub OAuth Application Credentials&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITHUB_CLIENT_ID&lt;span style="color:#f92672">=&lt;/span>your_github_client_id_here
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITHUB_CLIENT_SECRET&lt;span style="color:#f92672">=&lt;/span>your_github_client_secret_here
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># OAuth callback URL (must match GitHub app settings)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GITHUB_CALLBACK_URL&lt;span style="color:#f92672">=&lt;/span>http://localhost:3014/auth/github/callback
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="security-configuration">Security Configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># JWT token signing secret (minimum 32 characters for production)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JWT_SECRET&lt;span style="color:#f92672">=&lt;/span>your-super-secure-jwt-secret-at-least-32-characters-long
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Single authorized GitHub username (only this user can access)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TENANT_GITHUB_USERNAME&lt;span style="color:#f92672">=&lt;/span>your-github-username
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="optional-environment-variables">Optional Environment Variables&lt;/h2>
&lt;h3 id="server-configuration">Server Configuration&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Variable&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>PORT&lt;/code>&lt;/td>
 &lt;td>&lt;code>3014&lt;/code>&lt;/td>
 &lt;td>HTTP server port&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>NODE_ENV&lt;/code>&lt;/td>
 &lt;td>&lt;code>development&lt;/code>&lt;/td>
 &lt;td>Environment mode (development/production)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>HOST&lt;/code>&lt;/td>
 &lt;td>&lt;code>0.0.0.0&lt;/code>&lt;/td>
 &lt;td>Server bind address&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Server settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3014&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NODE_ENV&lt;span style="color:#f92672">=&lt;/span>development
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HOST&lt;span style="color:#f92672">=&lt;/span>0.0.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="database-configuration">Database Configuration&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Variable&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>DATABASE_URL&lt;/code>&lt;/td>
 &lt;td>&lt;code>file:./data/database.db&lt;/code>&lt;/td>
 &lt;td>SQLite database file path&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DATABASE_URL&lt;span style="color:#f92672">=&lt;/span>file:./data/database.db
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="workspace-configuration">Workspace Configuration&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Variable&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>MAX_WORKSPACES_PER_USER&lt;/code>&lt;/td>
 &lt;td>&lt;code>10&lt;/code>&lt;/td>
 &lt;td>Maximum concurrent workspaces&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>WORKSPACE_CLEANUP_DAYS&lt;/code>&lt;/td>
 &lt;td>&lt;code>30&lt;/code>&lt;/td>
 &lt;td>Days before inactive workspace cleanup&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Workspace limits&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MAX_WORKSPACES_PER_USER&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WORKSPACE_CLEANUP_DAYS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cors-configuration">CORS Configuration&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Variable&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>FRONTEND_URL&lt;/code>&lt;/td>
 &lt;td>-&lt;/td>
 &lt;td>Separate frontend deployment URL&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>ALLOWED_ORIGINS&lt;/code>&lt;/td>
 &lt;td>-&lt;/td>
 &lt;td>Additional CORS origins (comma-separated)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># CORS settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FRONTEND_URL&lt;span style="color:#f92672">=&lt;/span>http://localhost:3000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ALLOWED_ORIGINS&lt;span style="color:#f92672">=&lt;/span>http://localhost:3000,https://yourdomain.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="session-configuration">Session Configuration&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Variable&lt;/th>
 &lt;th>Default&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>SESSION_TIMEOUT_MINUTES&lt;/code>&lt;/td>
 &lt;td>&lt;code>1440&lt;/code>&lt;/td>
 &lt;td>Session timeout in minutes (24 hours)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>JWT_EXPIRES_IN&lt;/code>&lt;/td>
 &lt;td>&lt;code>7d&lt;/code>&lt;/td>
 &lt;td>JWT token expiration&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Session settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SESSION_TIMEOUT_MINUTES&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1440&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JWT_EXPIRES_IN&lt;span style="color:#f92672">=&lt;/span>7d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="complete-configuration-example">Complete Configuration Example&lt;/h2>
&lt;p>Here&amp;rsquo;s a complete &lt;code>.env&lt;/code> file example:&lt;/p></description></item><item><title>Real-time Features</title><link>https://act.drmhse.com/docs/core-features/real-time-features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/core-features/real-time-features/</guid><description>&lt;h1 id="real-time-features">Real-time Features&lt;/h1>
&lt;p>AI Code Terminal leverages WebSocket technology to provide real-time, bidirectional communication between your browser and the terminal session, creating a native-like terminal experience.&lt;/p>
&lt;h2 id="websocket-architecture">WebSocket Architecture&lt;/h2>
&lt;h3 id="technology-stack">Technology Stack&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Frontend:&lt;/strong> Socket.IO client for WebSocket management&lt;/li>
&lt;li>&lt;strong>Backend:&lt;/strong> Socket.IO server with Express.js integration&lt;/li>
&lt;li>&lt;strong>Transport:&lt;/strong> WebSocket with fallback support (polling, etc.)&lt;/li>
&lt;li>&lt;strong>Security:&lt;/strong> JWT-based authentication for socket connections&lt;/li>
&lt;/ul>
&lt;h3 id="connection-management">Connection Management&lt;/h3>
&lt;p>The application handles WebSocket connections robustly:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Automatic connection with authentication
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">io&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">auth&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">token&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">localStorage&lt;/span>.&lt;span style="color:#a6e22e">getItem&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;jwt_token&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">transports&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;websocket&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;polling&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="real-time-terminal-io">Real-time Terminal I/O&lt;/h2>
&lt;h3 id="bidirectional-communication">Bidirectional Communication&lt;/h3>
&lt;p>Terminal sessions provide instant bidirectional communication:&lt;/p></description></item><item><title>Documentation</title><link>https://act.drmhse.com/docs/getting-started/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/getting-started/introduction/</guid><description/></item><item><title>Getting Started</title><link>https://act.drmhse.com/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/getting-started/</guid><description>&lt;h1 id="getting-started">Getting Started&lt;/h1>
&lt;p>This guide will walk you through setting up a self-hosted, single-tenant AI development environment. Choose between VPS deployment for production use or local deployment with tunneling for development.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Server with Docker (VPS deployment) or local machine with Docker&lt;/li>
&lt;li>GitHub account for OAuth authentication&lt;/li>
&lt;li>Domain name (optional but recommended for VPS deployment)&lt;/li>
&lt;/ul>
&lt;h2 id="deployment-options">Deployment Options&lt;/h2>
&lt;h3 id="vps-deployment">VPS Deployment&lt;/h3>
&lt;p>Recommended for production use and team access. Requires a server with 1GB+ RAM.&lt;/p></description></item></channel></rss>