<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Authentication &amp; Security on AI Code Terminal: The AI-Native Shell</title><link>https://act.drmhse.com/docs/authentication/</link><description>Recent content in Authentication &amp; Security on AI Code Terminal: The AI-Native Shell</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://act.drmhse.com/docs/authentication/index.xml" rel="self" type="application/rss+xml"/><item><title>Authentication Flow</title><link>https://act.drmhse.com/docs/authentication/auth-flow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/authentication/auth-flow/</guid><description>&lt;h1 id="authentication-flow">Authentication Flow&lt;/h1>
&lt;p>AI Code Terminal implements a secure GitHub OAuth 2.0 authentication flow with single-tenant validation and JWT-based session management.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The authentication system provides:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>GitHub OAuth 2.0&lt;/strong> - Standard OAuth flow with GitHub&lt;/li>
&lt;li>&lt;strong>Single-Tenant Validation&lt;/strong> - Only authorized user can access&lt;/li>
&lt;li>&lt;strong>JWT Sessions&lt;/strong> - Stateless session management&lt;/li>
&lt;li>&lt;strong>Token Refresh&lt;/strong> - Automatic token renewal&lt;/li>
&lt;li>&lt;strong>Secure Storage&lt;/strong> - Encrypted token storage&lt;/li>
&lt;/ul>
&lt;h2 id="complete-authentication-flow">Complete Authentication Flow&lt;/h2>
&lt;h3 id="step-1-initial-access">Step 1: Initial Access&lt;/h3>
&lt;p>When a user visits the application:&lt;/p></description></item><item><title>Security Features</title><link>https://act.drmhse.com/docs/authentication/security-features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/authentication/security-features/</guid><description>&lt;h1 id="security-features">Security Features&lt;/h1>
&lt;p>AI Code Terminal implements multiple layers of security to protect user data, prevent unauthorized access, and ensure safe operation in both development and production environments.&lt;/p>
&lt;h2 id="multi-layer-security-architecture">Multi-Layer Security Architecture&lt;/h2>
&lt;h3 id="defense-in-depth">Defense in Depth&lt;/h3>
&lt;p>The security model implements multiple overlapping layers:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Network Security&lt;/strong> - HTTPS, secure headers, CORS&lt;/li>
&lt;li>&lt;strong>Authentication Security&lt;/strong> - OAuth 2.0, JWT, single-tenant validation&lt;/li>
&lt;li>&lt;strong>Authorization Security&lt;/strong> - Role-based access, resource permissions&lt;/li>
&lt;li>&lt;strong>Data Security&lt;/strong> - Encryption at rest, secure transmission&lt;/li>
&lt;li>&lt;strong>Application Security&lt;/strong> - Input validation, output sanitization&lt;/li>
&lt;li>&lt;strong>Infrastructure Security&lt;/strong> - Container isolation, resource limits&lt;/li>
&lt;/ol>
&lt;h2 id="encryption-and-data-protection">Encryption and Data Protection&lt;/h2>
&lt;h3 id="data-encryption-at-rest">Data Encryption at Rest&lt;/h3>
&lt;p>Sensitive data is encrypted using industry-standard algorithms:&lt;/p></description></item><item><title>Token Management</title><link>https://act.drmhse.com/docs/authentication/token-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://act.drmhse.com/docs/authentication/token-management/</guid><description>&lt;h1 id="token-management">Token Management&lt;/h1>
&lt;p>AI Code Terminal implements comprehensive token management for both JWT session tokens and GitHub OAuth tokens, ensuring secure authentication and seamless user experience.&lt;/p>
&lt;h2 id="token-types-overview">Token Types Overview&lt;/h2>
&lt;h3 id="jwt-session-tokens">JWT Session Tokens&lt;/h3>
&lt;p>&lt;strong>Purpose:&lt;/strong> Client-side session management&lt;br>
&lt;strong>Lifetime:&lt;/strong> 7 days (configurable)&lt;br>
&lt;strong>Storage:&lt;/strong> Client localStorage + optional HttpOnly cookies&lt;br>
&lt;strong>Scope:&lt;/strong> Application authentication and authorization&lt;/p>
&lt;h3 id="github-oauth-access-tokens">GitHub OAuth Access Tokens&lt;/h3>
&lt;p>&lt;strong>Purpose:&lt;/strong> GitHub API access&lt;br>
&lt;strong>Lifetime:&lt;/strong> 8 hours (GitHub default)&lt;br>
&lt;strong>Storage:&lt;/strong> Encrypted in server database&lt;br>
&lt;strong>Scope:&lt;/strong> GitHub repository and user data access&lt;/p></description></item></channel></rss>